services:
  db:
    image: postgres:16
    container_name: sus-db
    environment:
      POSTGRES_DB: sus_scheduler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d sus_scheduler" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [ sus_net ]

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: sus-pgadmin
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fiap.com.br
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks: [ sus_net ]

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: sus-scheduler
    depends_on:
      run-tests:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/sus_scheduler
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: "true"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks: [ sus_net ]

  # Servi√ßo dedicado para TESTES com Testcontainers
  run-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: test-runner
    container_name: sus-tests
    environment:
      SPRING_PROFILES_ACTIVE: test
      MAVEN_OPTS: -Xmx1g
      TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - maven-cache:/root/.m2
    entrypoint: [ "sh","-c","mvn -B clean verify" ]
    restart: "no"
    networks: [ sus_net ]

volumes:
  pgdata:
  pgadmin:
  maven-cache:

networks:
  sus_net: